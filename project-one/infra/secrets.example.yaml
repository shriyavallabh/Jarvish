# Project One - Kubernetes Secrets Configuration Template
# SECURITY: Never commit actual secrets to version control
# Use tools like Sealed Secrets, External Secrets Operator, or Helm with values files

apiVersion: v1
kind: Secret
metadata:
  name: project-one-secrets
  namespace: project-one-production
  labels:
    app: project-one
    environment: production
    component: backend-api
  annotations:
    # Rotation metadata
    rotation.projectone.com/last-rotated: "2024-01-01T00:00:00Z"
    rotation.projectone.com/rotation-interval: "90d"
    # DPDP compliance annotation
    compliance.projectone.com/contains-pii: "false"
    compliance.projectone.com/data-classification: "confidential"
type: Opaque
data:
  # ================================================
  # Database Secrets (base64 encoded)
  # ================================================
  # PostgreSQL connection string with credentials
  database-url: <base64-encoded-postgresql://user:pass@db-cluster.ap-south-1.rds.amazonaws.com:5432/projectone>
  # Database master password for admin operations
  database-master-password: <base64-encoded-master-db-password>
  # Read replica connection string
  database-read-url: <base64-encoded-postgresql://user:pass@db-cluster-ro.ap-south-1.rds.amazonaws.com:5432/projectone>
  
  # ================================================
  # Cache & Queue Secrets
  # ================================================
  # Primary Redis connection for caching
  redis-url: <base64-encoded-redis://cache-cluster.ap-south-1.cache.amazonaws.com:6379/0>
  # Redis AUTH password if required
  redis-password: <base64-encoded-redis-auth-password>
  # Queue-specific Redis connection
  queue-redis-url: <base64-encoded-redis://cache-cluster.ap-south-1.cache.amazonaws.com:6379/1>
  # Bull Dashboard admin credentials
  bull-board-password: <base64-encoded-secure-admin-password>
  
  # ================================================
  # Authentication & JWT Secrets
  # ================================================
  # JWT signing secret (minimum 256 bits)
  jwt-secret: <base64-encoded-super-secure-jwt-secret-key-min-32-chars>
  # Session cookie signing secret
  session-secret: <base64-encoded-session-secret-key-for-express-sessions>
  # Cookie encryption secret
  cookie-secret: <base64-encoded-cookie-signing-secret>
  # TOTP secret for 2FA
  totp-secret: <base64-encoded-totp-secret-for-2fa>
  # API key for internal service communication
  api-internal-key: <base64-encoded-internal-api-key>
  
  # ================================================
  # AI & OpenAI Integration Secrets
  # ================================================
  # OpenAI API key for GPT models
  openai-api-key: <base64-encoded-sk-proj-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>
  # OpenAI organization ID
  openai-org-id: <base64-encoded-org-xxxxxxxxxxxxxxxxxxxxxxxx>
  # OpenAI project ID for usage tracking
  openai-project-id: <base64-encoded-proj_xxxxxxxxxxxxxxxxxxxxxxxx>
  
  # ================================================
  # WhatsApp Business Cloud API Secrets
  # ================================================
  # WhatsApp access token (long-lived)
  whatsapp-access-token: <base64-encoded-EAAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>
  # WhatsApp app secret for signature verification
  whatsapp-app-secret: <base64-encoded-abcdefghijklmnopqrstuvwxyz123456>
  # Webhook verification token
  whatsapp-webhook-verify-token: <base64-encoded-your-webhook-verify-token-secure>
  # Webhook HMAC signing secret
  whatsapp-webhook-secret: <base64-encoded-your-webhook-secret-for-hmac-verification>
  
  # ================================================
  # Media & Asset Management Secrets
  # ================================================
  # Cloudinary API secret for image transformations
  cloudinary-api-secret: <base64-encoded-abcdefghijklmnopqrstuvwxyz123456>
  # Cloudflare R2 access credentials
  r2-access-key-id: <base64-encoded-your-r2-access-key>
  r2-secret-access-key: <base64-encoded-your-r2-secret-key>
  # Image upload signing secret
  upload-signature-secret: <base64-encoded-image-upload-signing-secret>
  
  # ================================================
  # AWS Services Secrets
  # ================================================
  # AWS access credentials
  aws-access-key-id: <base64-encoded-AKIAXXXXXXXXXXXXXXXX>
  aws-secret-access-key: <base64-encoded-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>
  # KMS key for encryption
  kms-key-id: <base64-encoded-arn:aws:kms:ap-south-1:123456789012:key/12345678-1234-1234-1234-123456789012>
  # SES SMTP credentials if needed
  ses-smtp-username: <base64-encoded-smtp-username>
  ses-smtp-password: <base64-encoded-smtp-password>
  
  # ================================================
  # Monitoring & Observability Secrets
  # ================================================
  # Datadog API credentials
  datadog-api-key: <base64-encoded-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>
  datadog-app-key: <base64-encoded-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx>
  # APM and logging authentication
  apm-license-key: <base64-encoded-apm-license-key-if-needed>
  
  # ================================================
  # Payment Gateway Secrets (if enabled)
  # ================================================
  # Razorpay secret keys
  razorpay-key-secret: <base64-encoded-your-razorpay-secret-key>
  razorpay-webhook-secret: <base64-encoded-your-razorpay-webhook-secret>
  
  # ================================================
  # Compliance & Security Secrets
  # ================================================
  # Data encryption key (32 bytes)
  data-encryption-key: <base64-encoded-32-byte-data-encryption-key>
  # Audit log signing key
  audit-log-signing-key: <base64-encoded-audit-log-integrity-key>
  # PII encryption key (separate from data encryption)
  pii-encryption-key: <base64-encoded-32-byte-pii-specific-key>
  # DPDP compliance webhook signature
  dpdp-webhook-secret: <base64-encoded-dpdp-compliance-webhook-secret>
  
  # ================================================
  # External API Integration Secrets
  # ================================================
  # SEBI API credentials (if direct integration needed)
  sebi-api-key: <base64-encoded-sebi-api-key-if-available>
  sebi-api-secret: <base64-encoded-sebi-api-secret-if-available>
  # RTA API credentials (if direct integration needed)
  rta-api-key: <base64-encoded-rta-api-key-if-available>
  # BSE Star MF credentials (if direct integration needed)
  bse-mf-api-key: <base64-encoded-bse-mf-api-key-if-available>
  
  # ================================================
  # Backup & Recovery Secrets
  # ================================================
  # Backup encryption passphrase
  backup-encryption-passphrase: <base64-encoded-backup-encryption-passphrase>
  # Cross-region backup access credentials
  backup-cross-region-key: <base64-encoded-cross-region-backup-access-key>
  backup-cross-region-secret: <base64-encoded-cross-region-backup-secret>

---
# Non-sensitive configuration (public values)
apiVersion: v1
kind: ConfigMap
metadata:
  name: project-one-config
  namespace: project-one-production
  labels:
    app: project-one
    environment: production
    component: configuration
  annotations:
    compliance.projectone.com/contains-pii: "false"
    compliance.projectone.com/data-classification: "public"
data:
  # ================================================
  # Application Configuration
  # ================================================
  app-name: "project-one"
  app-version: "1.0.0"
  node-env: "production"
  api-version: "v1"
  port: "3000"
  
  # ================================================
  # Database Configuration (non-sensitive)
  # ================================================
  database-max-connections: "100"
  database-pool-size: "10"
  database-idle-timeout: "30000"
  database-ssl-mode: "require"
  
  # ================================================
  # Cache Configuration
  # ================================================
  redis-family: "4"
  redis-keepalive: "30000"
  redis-max-retries: "3"
  redis-retry-delay-ms: "500"
  queue-concurrency: "5"
  queue-max-retries: "3"
  
  # ================================================
  # WhatsApp Configuration (public values)
  # ================================================
  whatsapp-phone-number-id: "123456789012345"
  whatsapp-business-account-id: "123456789012345"
  whatsapp-app-id: "123456789012345"
  wa-delivery-window-start: "06:00"
  wa-delivery-window-end: "06:30"
  wa-timezone: "Asia/Kolkata"
  wa-retry-attempts: "3"
  wa-batch-size: "50"
  wa-rate-limit-per-second: "20"
  wa-quality-threshold: "HIGH"
  
  # ================================================
  # AI Configuration
  # ================================================
  compliance-model: "gpt-4o-mini"
  content-model: "gpt-4.1"
  fallback-model: "gpt-3.5-turbo"
  ai-timeout-ms: "30000"
  ai-max-tokens: "4096"
  ai-temperature: "0.7"
  ai-max-concurrent: "50"
  ai-rate-limit-per-advisor: "30"
  ai-rate-limit-window-ms: "3600000"
  
  # ================================================
  # Media & Storage Configuration
  # ================================================
  cloudinary-cloud-name: "your-cloud-name"
  cloudinary-folder: "project-one"
  cloudinary-auto-tagging: "true"
  max-image-size: "10485760"
  max-files-per-request: "5"
  upload-timeout: "120000"
  allowed-formats: "jpg,jpeg,png,webp,gif"
  r2-bucket-name: "project-one-assets"
  r2-public-url: "https://assets.projectone.com"
  
  # ================================================
  # Monitoring Configuration
  # ================================================
  datadog-site: "us5.datadoghq.com"
  datadog-env: "production"
  datadog-service: "project-one-api"
  datadog-version: "1.0.0"
  datadog-trace-enabled: "true"
  log-level: "info"
  log-format: "json"
  log-max-files: "7"
  log-max-size: "100MB"
  log-rotate-daily: "true"
  health-check-timeout: "5000"
  health-check-interval: "30000"
  
  # ================================================
  # AWS Configuration
  # ================================================
  aws-region: "ap-south-1"
  s3-bucket-name: "project-one-storage-ap-south-1"
  s3-backup-bucket: "project-one-backups-ap-south-1"
  ses-region: "ap-south-1"
  ses-from-email: "noreply@projectone.com"
  ses-from-name: "Project One"
  ses-reply-to: "support@projectone.com"
  
  # ================================================
  # Performance & Rate Limiting
  # ================================================
  rate-limit-window-ms: "900000"
  rate-limit-max-requests: "100"
  rate-limit-skip-successful-requests: "false"
  request-timeout-ms: "30000"
  graceful-shutdown-timeout: "30000"
  keep-alive-timeout: "5000"
  headers-timeout: "10000"
  cache-ttl-default: "3600"
  cache-ttl-user-session: "86400"
  cache-ttl-ai-responses: "1209600"
  cache-ttl-templates: "604800"
  cache-ttl-compliance-rules: "86400"
  
  # ================================================
  # Business Logic Configuration
  # ================================================
  compliance-strict-mode: "true"
  sebi-validation-enabled: "true"
  dpdp-logging-enabled: "true"
  ai-fallback-enabled: "true"
  compliance-policy-version: "2024.1"
  content-templates-enabled: "true"
  multi-language-support: "true"
  default-language: "en"
  supported-languages: "en,hi,mr"
  fallback-library-size: "60"
  
  # ================================================
  # Feature Flags
  # ================================================
  enable-ai-personalization: "true"
  enable-fallback-packs: "true"
  enable-pro-features: "true"
  enable-analytics: "true"
  analytics-sampling-rate: "1.0"
  
  # ================================================
  # External URLs
  # ================================================
  advisor-portal-url: "https://advisors.projectone.com"
  admin-portal-url: "https://admin.projectone.com"
  public-api-url: "https://api.projectone.com"
  sebi-api-base-url: "https://api.sebi.gov.in"
  rta-api-base-url: "https://api.rtaindia.com"
  bse-star-mf-url: "https://bsestarmf.in"
  nse-api-url: "https://www.nseindia.com/api"
  
  # ================================================
  # Compliance & Audit
  # ================================================
  audit-log-enabled: "true"
  audit-log-retention-days: "1825"
  pii-encryption-enabled: "true"
  gdpr-mode: "false"
  dpdp-mode: "true"
  dsr-email: "privacy@projectone.com"
  dsr-response-days: "30"
  data-export-format: "json"
  data-deletion-grace-period: "30"
  sebi-reporting-enabled: "true"
  sebi-report-schedule: "0 2 1 * *"
  dpdp-audit-enabled: "true"
  compliance-alert-email: "compliance@projectone.com"
  
  # ================================================
  # Admin Configuration
  # ================================================
  admin-ip-allowlist: "203.0.113.1,203.0.113.2,198.51.100.0/24"
  admin-2fa-required: "true"
  admin-session-timeout: "3600000"
  auto-backup-enabled: "true"
  backup-schedule: "0 2 * * *"
  backup-retention-days: "30"
  backup-approver-emails: "backup1@company.com,backup2@company.com"
  maintenance-mode: "false"
  maintenance-message: "System maintenance in progress. Please try again later."
  maintenance-allowed-ips: "203.0.113.1,203.0.113.2"
  
  # ================================================
  # Development Configuration (disable in production)
  # ================================================
  debug-mode: "false"
  enable-swagger: "false"
  enable-playground: "false"
  enable-debug-logs: "false"
  mock-whatsapp-api: "false"
  mock-openai-api: "false"
  mock-sebi-api: "false"
  mock-payment-gateway: "false"

---
# TLS Certificate Secret
apiVersion: v1
kind: Secret
metadata:
  name: project-one-tls
  namespace: project-one-production
  labels:
    app: project-one
    environment: production
    component: tls-certificates
  annotations:
    cert-manager.io/issuer: "letsencrypt-production"
    compliance.projectone.com/contains-pii: "false"
    compliance.projectone.com/data-classification: "public"
type: kubernetes.io/tls
data:
  # SSL/TLS certificate for HTTPS termination
  tls.crt: <base64-encoded-ssl-certificate-chain>
  tls.key: <base64-encoded-private-key>
  # CA certificate if needed
  ca.crt: <base64-encoded-ca-certificate>

---
# Example Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-one-api
  namespace: project-one-production
  labels:
    app: project-one
    component: backend-api
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: project-one
      component: backend-api
  template:
    metadata:
      labels:
        app: project-one
        component: backend-api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: project-one-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: api
        image: project-one:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        
        # Environment variables from ConfigMap (non-sensitive)
        envFrom:
        - configMapRef:
            name: project-one-config
        
        # Secret environment variables
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: jwt-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: openai-api-key
        - name: WHATSAPP_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: whatsapp-access-token
        - name: CLOUDINARY_API_SECRET
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: cloudinary-api-secret
        - name: DATADOG_API_KEY
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: datadog-api-key
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: project-one-secrets
              key: aws-secret-access-key
              
        # Health check probes
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          
        # Resource limits and requests
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
            
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            
        # Volume mounts for temporary files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /var/cache
          
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
        
      # Node selection and affinity
      nodeSelector:
        kubernetes.io/arch: amd64
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - project-one
                - key: component
                  operator: In
                  values:
                  - backend-api
              topologyKey: kubernetes.io/hostname